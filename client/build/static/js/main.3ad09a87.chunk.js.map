{"version":3,"sources":["Spotify-Logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","redirectTo","process","REDIRECT_TO","useState","currentSong","setCurrentSong","currentArtist","setCurrentArtist","getCurrentlyPlaying","a","fetch","response","console","log","status","json","responseInJson","item","name","artists","className","src","logo","alt","href","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,MAA0B,yC,MCiD1BA,MA7Cf,WACE,IAAMC,EAAaC,mIAAYC,aAAe,wBADjC,EAEyBC,mBAAS,IAFlC,mBAENC,EAFM,KAEOC,EAFP,OAG6BF,mBAAS,IAHtC,mBAGNG,EAHM,KAGSC,EAHT,KAKPC,EAAmB,uCAAG,8BAAAC,EAAA,sEACHC,MAAM,GAAD,OAAIV,EAAJ,+BADF,UACpBW,EADoB,OAG1BC,QAAQC,IAAIF,GACY,MAApBA,EAASG,OAJa,gBAKxBT,EAAe,yBALS,0BAMK,MAApBM,EAASG,OANM,iBAOxBT,EAAe,kCAPS,2BAQK,MAApBM,EAASG,OARM,kCASKH,EAASI,OATd,QASlBC,EATkB,OAUxBJ,QAAQC,IAAIG,GACZX,EAAeW,EAAeC,KAAKC,MACnCX,EAAiBS,EAAeC,KAAKE,QAAQ,GAAGD,MAZxB,4CAAH,qDAgBzB,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mBAAGC,KAAK,0EAAR,mBAIA,gCACE,wBAAQC,QAASjB,EAAjB,+BACiB,KAAhBJ,EACC,2CAEA,gCACE,4DAA+BE,KAC/B,4BAAIF,gBC5BHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ad09a87.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spotify-Logo.2c7ee246.svg\";","import React, { useState } from \"react\";\nimport logo from \"./Spotify-Logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const redirectTo = process.env.REDIRECT_TO || \"http://localhost:5000\";\n  const [currentSong, setCurrentSong] = useState(\"\");\n  const [currentArtist, setCurrentArtist] = useState(\"\");\n\n  const getCurrentlyPlaying = async () => {\n    const response = await fetch(`${redirectTo}/spotify/functions/playing`);\n\n    console.log(response);\n    if (response.status === 401) {\n      setCurrentSong(\"You are not logged in\");\n    } else if (response.status === 204) {\n      setCurrentSong(\"Currently not playing any song\");\n    } else if (response.status === 200) {\n      const responseInJson = await response.json();\n      console.log(responseInJson);\n      setCurrentSong(responseInJson.item.name);\n      setCurrentArtist(responseInJson.item.artists[0].name);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a href=\"https://currently-playing-spotify-song.herokuapp.com/spotify/auth/login\">\n          login\n        </a>\n\n        <div>\n          <button onClick={getCurrentlyPlaying}>Currently playing</button>\n          {currentSong === \"\" || undefined ? (\n            <p>moment pls</p>\n          ) : (\n            <div>\n              <h4>Currently playing artist: {currentArtist}</h4>\n              <p>{currentSong}</p>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}